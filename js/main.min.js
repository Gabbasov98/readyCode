$.mask.definitions['9'] = '';
$.mask.definitions['d'] = '[0-9]';

$("._tab").click(function() {
    let parentBlock = $(this).parents("._tabs-parent")
    let tabId = $(this).attr("data-tab")
    $(parentBlock).find("._tab").removeClass("_active")
    $(this).addClass("_active")
    $(parentBlock).find(".tab-content").removeClass("_active")
    $(parentBlock).find(`.${tabId}`).addClass("_active")
})

function setLabelPlace(){
    let fields = document.querySelectorAll(".fg input,.fg textarea")

    fields.forEach(field => {
        setLabelPosition(field)

        field.onchange = ()=> {
            setLabelPosition(field)
        }

        function setLabelPosition() {
            if(field.value !== ""){
                field.classList.add("_filled")
            } else{
                field.classList.remove("_filled")
            }
        }
    })
}


setLabelPlace()

$(".footer-nav__show").click(function () {
    if(window.innerWidth<=576){
        $(this).parents(".footer-nav").toggleClass("_active")
        $(this).siblings(".footer-nav__hidden").slideToggle()
    }
})

$("._toggle-menu").click(function () {
    $(".header").toggleClass("_open")
    $("body").toggleClass("fixed-body")
})


function Sliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`.slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            observer: true,
            observeParents: true,
            observeSlideChildren: true,

            navigation: {
                nextEl: `.slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            pagination: {
                el: `.slider[data-slider-id="${index}"] .swiper-pagination`,
                type: 'bullets',
                clickable: true,
            },
        })
    })
}

function gallery() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".gallery")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)
        let gallery = {
            mySwiper: {},
            mySwiper2: {}
        }

        gallery.mySwiper = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper`, {
            spaceBetween: 0,
            slidesPerView: "auto",
            freeMode: true,
            watchSlidesProgress: true,
            direction: "vertical",
            breakpoints: {
                320: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });
        gallery.mySwiper2 = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper2`, {
            spaceBetween: 0,
            direction: "vertical",
            loop: true,
            navigation: {
                nextEl: `.gallery[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.gallery[data-slider-id="${index}"] .swiper-button-prev`,
            },
            thumbs: {
                swiper:  gallery.mySwiper,
            },
            breakpoints: {
                320: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });

        SlidersArray[index] = gallery
    })

}


Sliders()
gallery()

const parallaxContainers = document.querySelectorAll(".parallax-container")

parallaxContainers.forEach(container => {
    if(!container){
        // return
    }

    const parallaxItems = container.querySelectorAll(".parallax-item")
    parallaxItems.forEach(item => {
        const forX = 10;
        const forY = 30;
        const speed = 0.15

        let positionX = 0
        let positionY = 0
        let cordXPercent = 0
        let cordYPercent = 0

        function setMouseParallaxStyle() {
            const distX = cordXPercent - positionX
            const distY = cordYPercent - positionY

            positionX = positionX + (distX * speed * .125)
            positionY = positionY + (distY * speed * .125)

            item.style.cssText = `transform: translate(${positionX/forX}%,${positionY/forY}%);`

            requestAnimationFrame(setMouseParallaxStyle)
        }

        setMouseParallaxStyle()

        container.addEventListener("mousemove", function (e) {
            const parallaxWidth = container.offsetWidth
            const parallaxHeight = container.offsetHeight

            const cordX = e.pageX - parallaxWidth/2;
            const cordY = e.pageY - parallaxHeight/2;

            cordXPercent = cordX / parallaxWidth * 100
            cordYPercent = cordY / parallaxHeight * 100
        })
    })
})


butter.init({cancelOnTouch: true});

$(function() {
    $('.m-btn')
        .on('mouseenter', function(e) {
            var parentOffset = $(this).offset(),
                relX = e.pageX - parentOffset.left,
                relY = e.pageY - parentOffset.top;
            $(this).find('._animate-span').css({top:relY, left:relX})
        })
        .on('mouseout', function(e) {
            var parentOffset = $(this).offset(),
                relX = e.pageX - parentOffset.left,
                relY = e.pageY - parentOffset.top;
            $(this).find('._animate-span').css({top:relY, left:relX})
        });
});

if(window.innerWidth>992) {
    titlesAnim()
}

function titlesAnim() {



    const titles = Array.from(document.querySelectorAll('.m-title'));

    titles.forEach(title => {
        let rows = title.querySelectorAll(".heading-line__inner")
        rows =  gsap.utils.toArray(rows)

        gsap.from(rows, {
            duration: 1,
            yPercent: 100,
            ease: "power4.out",
            stagger: 0.1,
            scrollTrigger: {
                trigger: title,
                start: 'top 80%',
                // end: '+=50%',
                toggleActions: 'play none none none',
                // markers: true
            }
        });
    })
}

let fileInput = document.querySelector("[data-upload-id='file-input']")

if(fileInput){
    console.log(fileInput)
    const upload = new FileUploadWithPreview.FileUploadWithPreview('file-input');

    upload.options.multiple = true
    upload.options.images.backgroundImage = "img/doc2.svg"
    upload.options.images.baseImage = "img/doc2.svg"
    upload.options.images.successFileAltImage = "img/doc2.svg"
    upload.options.images.successPdfImage = "img/doc2.svg"
    upload.options.images.successVideoImage = "img/doc2.svg"

    $(document).on('change', '.input-container input', function(e) {
        $(this).parents(".file-input").addClass("_uploaded")
    })

    $(document).on('click', '.image-preview-item-clear', function(e) {
        let count = $(this).parents(".file-input").find(".image-preview-item").length
        if(count === 1){
            $(this).parents(".file-input").removeClass("_uploaded")
        }
    })
}



let body = document.querySelector("body")
let modalTogglers = document.querySelectorAll("[data-modal]")
let modals = document.querySelectorAll(".modal")

modalTogglers.forEach(el => {
    el.onclick = function () {
        let modalId = el.getAttribute("data-modal")
        openModal(modalId)
    }
})

function closeModals() {
    modals.forEach(modal => {
        modal.classList.remove("_active")
        body.classList.remove("fixed-body2")
    })
}

function openModal(modalId) {
    closeModals()
    let modal = document.querySelector(`#${modalId}`)
    let closeButtons = modal.querySelectorAll(`._close-modal`)

    modal.classList.add("_active")
    body.classList.add("fixed-body2")


    closeButtons.forEach(btn => {
        btn.onclick = ()=> {
            modal.classList.remove("_active")
            body.classList.remove("fixed-body2")
        }
    })
}

var getScrollBarSize = (function() {
    var el = window.document.createElement('textarea'), style = {
        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',
        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',
        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'
    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;

    for (var key in style) {
        if (style.hasOwnProperty(key)) {
            el.style[key] = style[key];
        }
    }

    return function() {
        var size = null;
        if (support && window.document.body) {
            window.document.body.appendChild(el);
            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];
            window.document.body.removeChild(el);
        }

        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);
        return size;
    };
})();



let phoneField = document.querySelector(".phone-field")

if(phoneField){
    setMask()
}



function setMask() {
    let activeCountry = $(".phone-country._active")
    let mask = $(activeCountry).attr("data-mask")
    let maskPlaceholder = $(activeCountry).attr("data-mask-placeholder")
    let flagImg = $(activeCountry).find(".phone-field__flag").attr("src")
    let phoneCode = $(activeCountry).find(".phone-field__code").html()

    $('.phone-field__toggle .phone-field__flag').attr("src",flagImg)
    $('.phone-field__toggle .phone-field__code').html(phoneCode)
    $('.phone-field input[type="tel"]').val("")
    $('.phone-field input[type="tel"]').attr("placeholder",maskPlaceholder)
    $('.phone-field input[type="tel"]').mask(mask, { autoclear: false }, { placeholder: maskPlaceholder });
}

$(".phone-country").click(function () {
    $(".phone-country").removeClass("_active")
    $(this).addClass("_active")

    setMask()
    setLabelPlace()
    $(".phone-field").removeClass("_active")
})

$(".phone-field__toggle").click(function () {
    $(".phone-field").toggleClass("_active")

    $(document).mouseup( function(e){
        var div = $( ".phone-field" );
        if ( !div.is(e.target)
            && div.has(e.target).length === 0 ) {
            if($(div).hasClass("_active")){
                $(div).removeClass("_active")
            }
        }
    });
})

$(".phone-field .fg").click(function () {
    $(".phone-field").removeClass("_active")
})




window.addEventListener('DOMContentLoaded', () => {
    fix100vh();
    window.addEventListener('resize', () => {
        fix100vh();
        getScrollBarSize()
    })

    getScrollBarSize()


})

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

let textareas = document.querySelectorAll("textarea");
textareas.forEach(textarea => {
    textarea.addEventListener('input', autoResize, false);

    function autoResize() {
        this.style.height = 'auto';
        this.style.height = this.scrollHeight + 16 + 'px';
    }
})

let animatedElements = document.querySelectorAll(
    '.heading-line,._animate-block,.text h2,.text h3,.text h4,.text h5,.text h6'
);

let Visible = function(target) {
    let targetPosition = {
            top: window.pageYOffset + target.getBoundingClientRect().top,
            left: window.pageXOffset + target.getBoundingClientRect().left,
            right: window.pageXOffset + target.getBoundingClientRect().right,
            bottom: window.pageYOffset + target.getBoundingClientRect().bottom
        },
        windowPosition = {
            top: window.pageYOffset,
            left: window.pageXOffset,
            right: window.pageXOffset + document.documentElement.clientWidth,
            bottom: window.pageYOffset + document.documentElement.clientHeight
        };

    if (targetPosition.bottom - 40 > windowPosition.top &&
        targetPosition.top + 40 < windowPosition.bottom) {
        target.classList.add("_animate-block--active")
    } else {

    }
};

window.addEventListener('scroll', function() {

    // initAnimElements()
});
// initAnimElements()
function initAnimElements() {
    animatedElements.forEach(el => {
        Visible(el)
    })
}

//# sourceMappingURL=../sourcemaps/main.min.js.map
